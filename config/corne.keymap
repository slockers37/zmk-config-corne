/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define HYP LS(LC(LA(LGUI)))

/ {
    macros {
        arrow_function: arrow_function {
            compatible = "zmk,behavior-macro";
            label = "ARROW_FUNCTION";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };
    };

    behaviors {
        pip: pip {
            compatible = "zmk,behavior-tap-dance";
            label = "PIP";
            #binding-cells = <0>;
            bindings =
                <&kp RBKT>,
                <&kp LS(LA(LG(RBKT)))>;
        };
        tog_layer: tog_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "TOG_LAYER";
            bindings =
                <&kp>,
                <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
            &kp TAB  &kp Q  &kp W     &kp E         &kp R       &kp T                             &kp Y            &kp U      &kp I    &kp O     &kp P  &kp BSPC
      &mt LCTRL ESC  &kp A  &kp S     &kp D         &kp F       &kp G                             &kp H            &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
&tog_layer LSHIFT 3  &kp Z  &kp X     &kp C         &kp V       &kp B                             &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                                   &kp LALT  &kp LEFT_GUI  &kp RETURN    &mt LS(LA(LC(LEFT_GUI))) SPACE  &lt 1 BACKSPACE     &tog 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH         &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp TILDE    &trans  &trans    &trans  &arrow_function     &trans    &kp MINUS  &kp EQUAL         &kp LBKT      &pip  &kp PIPE    &trans
   &trans    &trans  &trans    &trans           &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp BSLH    &trans
                             &kp LGUI           &trans    &kp RET    &kp SPACE     &trans         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &kp TAB        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5      &kp N6    &kp N7  &kp N8     &kp N9  &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans    &trans
 &kp LSHFT        &trans        &trans        &trans        &trans        &trans      &trans    &trans  &trans     &trans  &trans    &trans
                                              &trans        &trans        &trans      &trans    &trans  &trans
            >;
        };

        shortcuts {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
